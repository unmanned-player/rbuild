#! /bin/sh

# This file is expected to be placed named `.rbuild.conf` and place in `$
# {HOME}/` or in some parent directory of all the local projects.

# This following variables are of importance:
#
# rbuild exposed variables:
# ------------------------------------------------------------------------------
# rb_build_mode=
#     Contains one of `debug` or `optimized` based on how rbuild was invoked
#     from command line. Defaults to `debug`.
#
# rb_method=
#     Contains one of `auto` (for auto-tools) or `cmake` (for CMake) referring
#     to the build method. Note, if both auto-tools and CMake build scripts
#     were found in root of project repository, CMake is given preference.
#
# IMPORTANT Note:
# ==============================================================================
# Due to the nature of auto-tools, the configuration script will be loaded
# twice. The first time load is to get '$RB_ROOT' to generate remote build and
# source paths. And second time, to allow for configuration script to adjust
# other variables based on the newly discovered paths. As such 3 new variables
# are made available in second round:
#
# rdir_src=
#     The remote source directory.
#
# rdir_bin=
#     The remote binary directory where all binaries are built.
#
# rdir_ins=
#     The remote installation path prefix where installable binaries are stored.
#
# Generic configuration variables:
# ------------------------------------------------------------------------------
# RUSER=
#    Optional. The user-name on the remote build server. If left unspecified,
#    rbuild will default to local $USER or whatever is specified for the
#    $RB_BHOST in ~/.ssh/config
#
# RB_BHOST=
#     The remote build host where all development tools are available.
#
# RB_DHOST=
#     The remote site where the build binaries will be deployed. Note that,
#     there should be free SSH access from $RB_BHOST to $RB_DHOST for $RUSER as
#     the installable artefacts are copied directly between them.
#
# RB_ROOT=
#     The root directory on the remote build host where sources are stored and
#     binaries are generated.
#
# RB_JOBS=
#     Number of parallel jobs to use. If left unspecified, it defaults to
#     whatever CPUs the dev computer has where rbuild is called from.
#
# RSYNC=
#     Optional. The path to `rsync` application. On some build servers
#     (e.g. Solaris 5.10), this may not be available on default $PATH in which
#     case RSYNC must be set to `RSYNC=/usr/sfw/bin/rsync`.
#
# CMake specific variables:
# ------------------------------------------------------------------------------
# CMAKE_EXE=
#     Optional. Path to CMake executable. On some older Linux distros CMake 2.x
#     and 3.x were available as `/usr/bin/cmake` and `/usr/bin/cmake3`. If this
#     variable is left unspecified, it defaults to `cmake` available on default
#     $PATH. When specified, it must point to the correct location of CMake
#     executable.
#
# CTEST_EXE=
#     Same as `CMAKE_EXE=`, but for `ctest` executable.
#
# Build assistance variables (generic):
# ------------------------------------------------------------------------------
# PKG_CONFIG_PATH=
#     Extra paths for pkg-config on remote build server.
#
# Build assistance variables (CMake):
# ------------------------------------------------------------------------------
# CMAKE_EXTRAS=
#     Optional. Any extra options to be passed to a call to CMake for
#     configuration of the project.
#
# CMAKE_GENERATOR=
#     Optional. The CMake generator. If left unspecified, it defaults to 'Unix
#     Makefiles' or whatever is suitable for the remote build server. If
#     specified it must contain a valid value as accepted by CMake's `-G`
#     argument.
#
# CMAKE_PREFIX_PATH=
#     A colon (not semicolon) separated list of paths that CMake will look for
#     dependencies. The rbuild tool will convert separators to semicolon later.
#     This restriction is to play around shell limitations.
#
# Build assistance variables (auto-tools):
# ------------------------------------------------------------------------------
# AUTO_EXTRA_CONFIGURE_ARGS=
#     Any extra arguments passed to `./configure` script.
#
# Other influential variables:
# ------------------------------------------------------------------------------
# If the configuration specifies any of these variables, they can influence how
# `./configure` or `cmake ...` are invoked.
#
# AR=
# CC=
# CCAS=
# CXX=
# LINKER=
# NM=
# RANLIB=
# STRIP=

RUSER=ape
RSYNC=/usr/sfw/bin/rsync

RB_BHOST=solaris.dev.home.lan
RB_DHOST=solaris.vm.home.lan
RB_ROOT=/exports/home/${RUSER}/.rb-main

CMAKE_EXE=/opt/csw/bin/cmake
CTEST_EXE=/opt/csw/bin/ctest
# CMAKE_GENERATOR=Ninja
CMAKE_EXTRAS=""
CMAKE_EXTRAS="${CMAKE_EXTRAS} -DBUILD_DOCS=Off"
CMAKE_EXTRAS="${CMAKE_EXTRAS} -DBUILD_TESTS=On"

case "${rb_type}" in
    debug)
        CMAKE_EXTRAS="${CMAKE_EXTRAS} -DENABLE_ASAN=On"

        CFLAGS="-fsanitize=address -ggdb3 -O0"
        AUTO_EXTRA_CONFIGURE_ARGS="--enable-valgrind-testing"
    ;;
    optimized)
        CMAKE_EXTRAS="${CMAKE_EXTRAS} -DENABLE_ASAN=Off"

        CFLAGS="-ggdb3 -O3"
        AUTO_EXTRA_CONFIGURE_ARGS="--enable-optimizations"
    ;;
    *)
    ;;
esac
